version: '3.9'

services:
  db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api-1
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      DATABASE_HOST: ${DB_HOST}
      DATABASE_USER: postgres
      DATABASE_PASSWORD: ${DB_PASS}
      DATABASE_NAME: stocks
      API_KEY: ${API_KEY}
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "80:80"
    env_file:
      - .env
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
    networks:
      - app-network

volumes:
  db-data:

networks:
  app-network:
    driver: bridge
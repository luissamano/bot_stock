# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# psql -U username -d database_name -f create_table.sql
# psql -U username -d database_name -f insert_data.sql

# https://github.com/docker/awesome-compose
services:
  db:
    image: postgres:15
    restart: always
    user: postgres
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=stocks
      - POSTGRES_USER=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    env_file:
      - .env
    environment:
      - DATABASE_HOST:${DB_HOST}
      - DATABASE_USER:postgres
      - DATABASE_PASSWORD:${DB_PASS}
      - DATABASE_NAME:stocks
      - API_KEY:${API_KEY}
    depends_on:
      - db
    networks:
      - app-network
volumes:
  db-data:
networks:
  app-network:
    driver: bridge

{"ast":null,"code":"var _jsxFileName = \"/Users/luissamano/code/bot_stock/bot_front/src/ActionProvider/index.jsx\";\nimport React from \"react\";\nimport { getListPriceStock, getPriceCurrent } from \"../Services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionProvider = ({\n  createChatBotMessage,\n  children,\n  setState\n}) => {\n  const handleHello = () => {\n    const botMessage = createChatBotMessage(\"Hello. Nice to meet you.\");\n    setState(prev => ({\n      ...prev,\n      messages: [...prev.messages, botMessage]\n    }));\n  };\n  const handleSearchStockId = async (value, props) => {\n    const message = createChatBotMessage(`Buscando ${value}...`, {\n      loading: true,\n      terminateLoading: true,\n      withAvatar: true\n    });\n    const {\n      state\n    } = props;\n    let {\n      count\n    } = state;\n    count = count + 1;\n    console.log(count);\n    addMessageToState(message);\n    const current = await getPriceCurrent(value);\n    console.log(current);\n    const {\n      data\n    } = await getListPriceStock();\n    const ls = data.filter(item => item.symbol == value);\n    addListPriceStock(current, ls, count);\n  };\n  const addMessageToState = message => {\n    setState(state => ({\n      ...state,\n      messages: [...state.messages, message]\n    }));\n  };\n  const addListPriceStock = (current, ls, count) => {\n    setState(state => ({\n      ...state,\n      currentPrice: current,\n      listPriceStock: [...state.listPriceStock, {\n        search: count,\n        data: ls\n      }],\n      count: count\n    }));\n    const message = createChatBotMessage(`Listo!`, {\n      delay: 1000,\n      loading: true,\n      terminateLoading: true,\n      withAvatar: true,\n      widget: \"Price\"\n    });\n    addMessageToState(message);\n  };\n  // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        actions: {\n          handleHello,\n          handleSearchStockId\n        }\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c = ActionProvider;\nexport default ActionProvider;\nvar _c;\n$RefreshReg$(_c, \"ActionProvider\");","map":{"version":3,"names":["React","getListPriceStock","getPriceCurrent","jsxDEV","_jsxDEV","ActionProvider","createChatBotMessage","children","setState","handleHello","botMessage","prev","messages","handleSearchStockId","value","props","message","loading","terminateLoading","withAvatar","state","count","console","log","addMessageToState","current","data","ls","filter","item","symbol","addListPriceStock","currentPrice","listPriceStock","search","delay","widget","Children","map","child","cloneElement","actions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luissamano/code/bot_stock/bot_front/src/ActionProvider/index.jsx"],"sourcesContent":["import React from \"react\";\nimport { getListPriceStock, getPriceCurrent } from \"../Services\";\n\nconst ActionProvider = ({ createChatBotMessage, children, setState }) => {\n  const handleHello = () => {\n    const botMessage = createChatBotMessage(\"Hello. Nice to meet you.\");\n\n    setState((prev) => ({\n      ...prev,\n      messages: [...prev.messages, botMessage],\n    }));\n  };\n\n  const handleSearchStockId = async (value, props) => {\n    const message = createChatBotMessage(`Buscando ${value}...`, {\n      loading: true,\n      terminateLoading: true,\n      withAvatar: true,\n    });\n\n    const { state } = props;\n    let { count } = state;\n    count = count + 1;\n    console.log(count);\n\n    addMessageToState(message);\n\n    const current = await getPriceCurrent(value);\n    console.log(current);\n    const { data } = await getListPriceStock();\n    const ls = data.filter((item) => item.symbol == value);\n\n    addListPriceStock(current, ls, count);\n  };\n\n  const addMessageToState = (message) => {\n    setState((state) => ({\n      ...state,\n      messages: [...state.messages, message],\n    }));\n  };\n\n  const addListPriceStock = (current, ls, count) => {\n    setState((state) => ({\n      ...state,\n      currentPrice: current,\n      listPriceStock: [ ...state.listPriceStock, { search: count, data: ls } ],\n      count: count\n    }));\n\n    const message = createChatBotMessage(`Listo!`, {\n      delay: 1000,\n      loading: true,\n      terminateLoading: true,\n      withAvatar: true,\n      widget: \"Price\",\n    });\n\n    addMessageToState(message);\n  };\n  // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\n  return (\n    <div>\n      {React.Children.map(children, (child) => {\n        return React.cloneElement(child, {\n          actions: {\n            handleHello,\n            handleSearchStockId,\n          },\n        });\n      })}\n    </div>\n  );\n};\n\nexport default ActionProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from \"axios\";\n\n// Configuración global de Axios\naxios.defaults.headers.common[\"Access-Control-Allow-Origin\"] = \"*\";\naxios.defaults.headers.common[\"Access-Control-Allow-Methods\"] = \"GET, POST, PUT\";\naxios.defaults.headers.common[\"Access-Control-Allow-Headers\"] = \"Origin, Content-Type, X-Auth-Token\";\n\n// URL base para las solicitudes a la API\nconst BASE_URL = \"http://localhost:8000\";\n\n// Función para obtener la lista de precios de las acciones\nexport const getListPriceStock = async () => {\n  let data = await axios({\n    method: \"get\",\n    // Método HTTP GET\n    url: '/stocks',\n    // Endpoint para obtener los precios de las acciones\n    baseURL: BASE_URL // URL base de la API\n  });\n  return data;\n};\n\n// Función para obtener el precio actual de una acción\nexport const getPriceCurrent = async newPrice => {\n  try {\n    // Realiza una solicitud POST para obtener y crear una acción\n    let {\n      data,\n      status\n    } = await axios({\n      method: \"post\",\n      // Método HTTP POST\n      url: `/fetch_and_create_stock?symbol=${newPrice}`,\n      // Endpoint con el símbolo de la acción\n      baseURL: BASE_URL,\n      // URL base de la API\n      headers: {\n        'accept': 'application/json' // Acepta respuestas en formato JSON\n      }\n    });\n\n    // Verifica si el estado de la respuesta no es 200 o 201\n    if (status !== 200 && status !== 201) {\n      throw new Error(`Unexpected response status: ${status}`);\n    }\n    return data;\n  } catch (error) {\n    // Manejo de diferentes tipos de errores de axios\n    if (error.response) {\n      // El servidor respondió con un código de estado fuera del rango de 2xx\n      console.error(`Error fetching and creating stock: ${error.response.status} - ${error.response.data}`);\n      return {\n        error: `Error: ${error.response.status} - ${error.response.data}`\n      };\n    } else if (error.request) {\n      // La solicitud se hizo pero no se recibió respuesta\n      console.error(`Error fetching and creating stock: No response received`, error.request);\n      return {\n        error: \"Error: No response received from the server\"\n      };\n    } else {\n      // Algo pasó al configurar la solicitud que desencadenó un error\n      console.error(`Error fetching and creating stock:`, error.message);\n      return {\n        error: `Error: ${error.message}`\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","headers","common","BASE_URL","getListPriceStock","data","method","url","baseURL","getPriceCurrent","newPrice","status","Error","error","response","console","request","message"],"sources":["/Users/luissamano/code/bot_stock/bot_front/src/Services/index.js"],"sourcesContent":["import axios from \"axios\";\n\n// Configuración global de Axios\naxios.defaults.headers.common[\"Access-Control-Allow-Origin\"] = \"*\";\naxios.defaults.headers.common[\"Access-Control-Allow-Methods\"] = \"GET, POST, PUT\";\naxios.defaults.headers.common[\"Access-Control-Allow-Headers\"] = \"Origin, Content-Type, X-Auth-Token\";\n\n// URL base para las solicitudes a la API\nconst BASE_URL = \"http://localhost:8000\";\n\n// Función para obtener la lista de precios de las acciones\nexport const getListPriceStock = async () => {\n  let data = await axios({\n    method: \"get\",       // Método HTTP GET\n    url: '/stocks',      // Endpoint para obtener los precios de las acciones\n    baseURL: BASE_URL    // URL base de la API\n  });\n  return data;\n};\n\n// Función para obtener el precio actual de una acción\nexport const getPriceCurrent = async (newPrice) => {\n  try {\n    // Realiza una solicitud POST para obtener y crear una acción\n    let { data, status } = await axios({\n      method: \"post\",    // Método HTTP POST\n      url: `/fetch_and_create_stock?symbol=${newPrice}`,  // Endpoint con el símbolo de la acción\n      baseURL: BASE_URL, // URL base de la API\n      headers: {\n        'accept': 'application/json'  // Acepta respuestas en formato JSON\n      }\n    });\n\n    // Verifica si el estado de la respuesta no es 200 o 201\n    if (status !== 200 && status !== 201) {\n      throw new Error(`Unexpected response status: ${status}`);\n    }\n\n    return data;\n  } catch (error) {\n    // Manejo de diferentes tipos de errores de axios\n    if (error.response) {\n      // El servidor respondió con un código de estado fuera del rango de 2xx\n      console.error(`Error fetching and creating stock: ${error.response.status} - ${error.response.data}`);\n      return {\n        error: `Error: ${error.response.status} - ${error.response.data}`\n      };\n    } else if (error.request) {\n      // La solicitud se hizo pero no se recibió respuesta\n      console.error(`Error fetching and creating stock: No response received`, error.request);\n      return {\n        error: \"Error: No response received from the server\"\n      };\n    } else {\n      // Algo pasó al configurar la solicitud que desencadenó un error\n      console.error(`Error fetching and creating stock:`, error.message);\n      return {\n        error: `Error: ${error.message}`\n      };\n    }\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,6BAA6B,CAAC,GAAG,GAAG;AAClEH,KAAK,CAACC,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,8BAA8B,CAAC,GAAG,gBAAgB;AAChFH,KAAK,CAACC,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,8BAA8B,CAAC,GAAG,oCAAoC;;AAEpG;AACA,MAAMC,QAAQ,GAAG,uBAAuB;;AAExC;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAIC,IAAI,GAAG,MAAMN,KAAK,CAAC;IACrBO,MAAM,EAAE,KAAK;IAAQ;IACrBC,GAAG,EAAE,SAAS;IAAO;IACrBC,OAAO,EAAEL,QAAQ,CAAI;EACvB,CAAC,CAAC;EACF,OAAOE,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMI,eAAe,GAAG,MAAOC,QAAQ,IAAK;EACjD,IAAI;IACF;IACA,IAAI;MAAEL,IAAI;MAAEM;IAAO,CAAC,GAAG,MAAMZ,KAAK,CAAC;MACjCO,MAAM,EAAE,MAAM;MAAK;MACnBC,GAAG,EAAE,kCAAkCG,QAAQ,EAAE;MAAG;MACpDF,OAAO,EAAEL,QAAQ;MAAE;MACnBF,OAAO,EAAE;QACP,QAAQ,EAAE,kBAAkB,CAAE;MAChC;IACF,CAAC,CAAC;;IAEF;IACA,IAAIU,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,GAAG,EAAE;MACpC,MAAM,IAAIC,KAAK,CAAC,+BAA+BD,MAAM,EAAE,CAAC;IAC1D;IAEA,OAAON,IAAI;EACb,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACd;IACA,IAAIA,KAAK,CAACC,QAAQ,EAAE;MAClB;MACAC,OAAO,CAACF,KAAK,CAAC,sCAAsCA,KAAK,CAACC,QAAQ,CAACH,MAAM,MAAME,KAAK,CAACC,QAAQ,CAACT,IAAI,EAAE,CAAC;MACrG,OAAO;QACLQ,KAAK,EAAE,UAAUA,KAAK,CAACC,QAAQ,CAACH,MAAM,MAAME,KAAK,CAACC,QAAQ,CAACT,IAAI;MACjE,CAAC;IACH,CAAC,MAAM,IAAIQ,KAAK,CAACG,OAAO,EAAE;MACxB;MACAD,OAAO,CAACF,KAAK,CAAC,yDAAyD,EAAEA,KAAK,CAACG,OAAO,CAAC;MACvF,OAAO;QACLH,KAAK,EAAE;MACT,CAAC;IACH,CAAC,MAAM;MACL;MACAE,OAAO,CAACF,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAACI,OAAO,CAAC;MAClE,OAAO;QACLJ,KAAK,EAAE,UAAUA,KAAK,CAACI,OAAO;MAChC,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
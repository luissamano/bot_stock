{"ast":null,"code":"var _jsxFileName = \"/Users/luissamano/code/bot_stock/bot_front/src/ActionProvider/index.jsx\";\nimport React from 'react';\nimport getPriceStock from '../Services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionProvider = ({\n  createChatBotMessage,\n  setState,\n  children\n}) => {\n  const handleSearchFinish = async (props, state) => {\n    const botMessage = createChatBotMessage(\"Listo\", {\n      loading: true,\n      terminateLoading: true,\n      withAvatar: true\n    });\n    addMessageToState(botMessage);\n    const data = await getPriceStock(\"\");\n    console.log(data.data);\n    addPriceStockList(...state, data.data);\n  };\n  const handleInputStock = () => {\n    const botMessage = createChatBotMessage(\"Ingresa la clave de la accion a buscar:\", {\n      loading: true,\n      terminateLoading: true,\n      withAvatar: true\n    });\n    addMessageToState(botMessage);\n  };\n  const addMessageToState = botMessage => {\n    setState(prev => ({\n      ...prev,\n      messages: [...prev.messages, botMessage]\n    }));\n  };\n  const addPriceStockList = (state, data) => {\n    setState(state => ({\n      ...state,\n      priceStockList: data\n    }));\n  };\n\n  // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        actions: {\n          handleInputStock,\n          handleSearchFinish\n        }\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = ActionProvider;\nexport default ActionProvider;\nvar _c;\n$RefreshReg$(_c, \"ActionProvider\");","map":{"version":3,"names":["React","getPriceStock","jsxDEV","_jsxDEV","ActionProvider","createChatBotMessage","setState","children","handleSearchFinish","props","state","botMessage","loading","terminateLoading","withAvatar","addMessageToState","data","console","log","addPriceStockList","handleInputStock","prev","messages","priceStockList","Children","map","child","cloneElement","actions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luissamano/code/bot_stock/bot_front/src/ActionProvider/index.jsx"],"sourcesContent":["import React from 'react';\nimport getPriceStock from '../Services'\n\nconst ActionProvider = ({ createChatBotMessage, setState, children }) => {\n  \n\n  const handleSearchFinish = async (props, state) => {\n    const botMessage = createChatBotMessage(\n      \"Listo\",\n      {\n        loading: true,\n        terminateLoading: true,\n        withAvatar: true,\n      }\n    );\n    addMessageToState(botMessage)\n    const data = await getPriceStock(\"\")\n    console.log(data.data)\n    addPriceStockList(...state, data.data)\n\n  };\n\n  const handleInputStock = () => {\n    const botMessage = createChatBotMessage(\n      \"Ingresa la clave de la accion a buscar:\",\n      {\n        loading: true,\n        terminateLoading: true,\n        withAvatar: true,\n      }\n    );\n    addMessageToState(botMessage)\n  };\n\n  const addMessageToState = (botMessage) => {\n    setState((prev) => ({\n      ...prev,\n      messages: [...prev.messages, botMessage],\n    }));\n  };\n\n  const addPriceStockList = (state, data) => {\n    setState((state) => ({\n      ...state,\n      priceStockList: data,\n    }));\n  }\n  \n  // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\n  return (\n    <div>\n      {React.Children.map(children, (child) => {\n        return React.cloneElement(child, {\n          actions: {\n            handleInputStock,\n            handleSearchFinish,\n          },\n        });\n      })}\n    </div>\n  );\n};\n\nexport default ActionProvider;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,oBAAoB;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAGvE,MAAMC,kBAAkB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,KAAK,KAAK;IACjD,MAAMC,UAAU,GAAGN,oBAAoB,CACrC,OAAO,EACP;MACEO,OAAO,EAAE,IAAI;MACbC,gBAAgB,EAAE,IAAI;MACtBC,UAAU,EAAE;IACd,CACF,CAAC;IACDC,iBAAiB,CAACJ,UAAU,CAAC;IAC7B,MAAMK,IAAI,GAAG,MAAMf,aAAa,CAAC,EAAE,CAAC;IACpCgB,OAAO,CAACC,GAAG,CAACF,IAAI,CAACA,IAAI,CAAC;IACtBG,iBAAiB,CAAC,GAAGT,KAAK,EAAEM,IAAI,CAACA,IAAI,CAAC;EAExC,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMT,UAAU,GAAGN,oBAAoB,CACrC,yCAAyC,EACzC;MACEO,OAAO,EAAE,IAAI;MACbC,gBAAgB,EAAE,IAAI;MACtBC,UAAU,EAAE;IACd,CACF,CAAC;IACDC,iBAAiB,CAACJ,UAAU,CAAC;EAC/B,CAAC;EAED,MAAMI,iBAAiB,GAAIJ,UAAU,IAAK;IACxCL,QAAQ,CAAEe,IAAI,KAAM;MAClB,GAAGA,IAAI;MACPC,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAQ,EAAEX,UAAU;IACzC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMQ,iBAAiB,GAAGA,CAACT,KAAK,EAAEM,IAAI,KAAK;IACzCV,QAAQ,CAAEI,KAAK,KAAM;MACnB,GAAGA,KAAK;MACRa,cAAc,EAAEP;IAClB,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,oBACEb,OAAA;IAAAI,QAAA,EACGP,KAAK,CAACwB,QAAQ,CAACC,GAAG,CAAClB,QAAQ,EAAGmB,KAAK,IAAK;MACvC,oBAAO1B,KAAK,CAAC2B,YAAY,CAACD,KAAK,EAAE;QAC/BE,OAAO,EAAE;UACPR,gBAAgB;UAChBZ;QACF;MACF,CAAC,CAAC;IACJ,CAAC;EAAC;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA1DI7B,cAAc;AA4DpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
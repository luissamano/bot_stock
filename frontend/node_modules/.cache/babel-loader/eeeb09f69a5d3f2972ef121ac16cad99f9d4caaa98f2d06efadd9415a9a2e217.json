{"ast":null,"code":"class MessageParser {\n  constructor(actionProvider) {\n    this.parse = message => {\n      const lowerCase = message.toLowerCase();\n      if (lowerCase.includes(\"messageparser\") || lowerCase.includes(\"parse\") || lowerCase.includes(\"parser\") || lowerCase.includes(\"message parser\")) {\n        return this.actionProvider.handleMessageParserDocs();\n      }\n      if (lowerCase.includes(\"action\") || lowerCase.includes(\"actionprovider\")) {\n        return this.actionProvider.handleActionProviderDocs();\n      }\n      if (lowerCase.includes(\"config\")) {\n        return this.actionProvider.handleConfigDocs();\n      }\n      if (lowerCase.includes(\"widget\")) {\n        return this.actionProvider.handleWidgetDocs();\n      }\n      return this.actionProvider.handleDefault();\n    };\n    this.actionProvider = actionProvider;\n  }\n}\nexport default MessageParser;","map":{"version":3,"names":["MessageParser","constructor","actionProvider","parse","message","lowerCase","toLowerCase","includes","handleMessageParserDocs","handleActionProviderDocs","handleConfigDocs","handleWidgetDocs","handleDefault"],"sources":["/Users/luissamano/code/bot_stock/bot_front/src/MessageParser/index.js"],"sourcesContent":["\nclass MessageParser {\n  constructor(actionProvider) {\n    this.actionProvider = actionProvider;\n  }\n\n  parse = (message) => {\n    const lowerCase = message.toLowerCase();\n\n    if (\n      lowerCase.includes(\"messageparser\") ||\n      lowerCase.includes(\"parse\") ||\n      lowerCase.includes(\"parser\") ||\n      lowerCase.includes(\"message parser\")\n    ) {\n      return this.actionProvider.handleMessageParserDocs();\n    }\n\n    if (lowerCase.includes(\"action\") || lowerCase.includes(\"actionprovider\")) {\n      return this.actionProvider.handleActionProviderDocs();\n    }\n\n    if (lowerCase.includes(\"config\")) {\n      return this.actionProvider.handleConfigDocs();\n    }\n\n    if (lowerCase.includes(\"widget\")) {\n      return this.actionProvider.handleWidgetDocs();\n    }\n\n    return this.actionProvider.handleDefault();\n  };\n}\n\nexport default MessageParser;\n"],"mappings":"AACA,MAAMA,aAAa,CAAC;EAClBC,WAAWA,CAACC,cAAc,EAAE;IAAA,KAI5BC,KAAK,GAAIC,OAAO,IAAK;MACnB,MAAMC,SAAS,GAAGD,OAAO,CAACE,WAAW,CAAC,CAAC;MAEvC,IACED,SAAS,CAACE,QAAQ,CAAC,eAAe,CAAC,IACnCF,SAAS,CAACE,QAAQ,CAAC,OAAO,CAAC,IAC3BF,SAAS,CAACE,QAAQ,CAAC,QAAQ,CAAC,IAC5BF,SAAS,CAACE,QAAQ,CAAC,gBAAgB,CAAC,EACpC;QACA,OAAO,IAAI,CAACL,cAAc,CAACM,uBAAuB,CAAC,CAAC;MACtD;MAEA,IAAIH,SAAS,CAACE,QAAQ,CAAC,QAAQ,CAAC,IAAIF,SAAS,CAACE,QAAQ,CAAC,gBAAgB,CAAC,EAAE;QACxE,OAAO,IAAI,CAACL,cAAc,CAACO,wBAAwB,CAAC,CAAC;MACvD;MAEA,IAAIJ,SAAS,CAACE,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAChC,OAAO,IAAI,CAACL,cAAc,CAACQ,gBAAgB,CAAC,CAAC;MAC/C;MAEA,IAAIL,SAAS,CAACE,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAChC,OAAO,IAAI,CAACL,cAAc,CAACS,gBAAgB,CAAC,CAAC;MAC/C;MAEA,OAAO,IAAI,CAACT,cAAc,CAACU,aAAa,CAAC,CAAC;IAC5C,CAAC;IA5BC,IAAI,CAACV,cAAc,GAAGA,cAAc;EACtC;AA4BF;AAEA,eAAeF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
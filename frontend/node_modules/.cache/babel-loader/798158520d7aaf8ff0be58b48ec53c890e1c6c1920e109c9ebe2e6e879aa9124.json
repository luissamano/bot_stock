{"ast":null,"code":"var _jsxFileName = \"/Users/luissamano/code/bot_stock/bot_front/src/ActionProvider/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport getPriceStock from '../Services';\nimport { DataContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionProvider = ({\n  createChatBotMessage,\n  setState,\n  children\n}) => {\n  _s();\n  const {\n    state,\n    changeState\n  } = useContext(DataContext);\n  const handleSearchFinish = async ({\n    state\n  }) => {\n    const botMessage = createChatBotMessage(\"Listo\", {\n      loading: true,\n      terminateLoading: true,\n      withAvatar: true\n    });\n    addMessageToState(botMessage);\n    addPriceStockList(await getPriceStock(\"\"));\n  };\n  const handleInputStock = () => {\n    const botMessage = createChatBotMessage(\"Ingresa la clave de la accion a buscar:\", {\n      loading: true,\n      terminateLoading: true,\n      withAvatar: true\n    });\n    addMessageToState(botMessage);\n  };\n  const addMessageToState = botMessage => {\n    setState(prev => ({\n      ...prev,\n      messages: [...prev.messages, botMessage]\n    }));\n  };\n  const addPriceStockList = ({\n    data\n  }) => {\n    setState(state => ({\n      ...state,\n      priceStockList: data\n    }));\n    localStorage.setItem('data', data);\n  };\n\n  // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        actions: {\n          handleInputStock,\n          handleSearchFinish\n        },\n        utils: {\n          state,\n          changeState\n        }\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionProvider, \"UsRVwCV4AxwJoPnooATCuwzU/p8=\");\n_c = ActionProvider;\nexport default ActionProvider;\nvar _c;\n$RefreshReg$(_c, \"ActionProvider\");","map":{"version":3,"names":["React","useContext","getPriceStock","DataContext","jsxDEV","_jsxDEV","ActionProvider","createChatBotMessage","setState","children","_s","state","changeState","handleSearchFinish","botMessage","loading","terminateLoading","withAvatar","addMessageToState","addPriceStockList","handleInputStock","prev","messages","data","priceStockList","localStorage","setItem","Children","map","child","cloneElement","actions","utils","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luissamano/code/bot_stock/bot_front/src/ActionProvider/index.jsx"],"sourcesContent":["import React, {useContext} from 'react';\nimport getPriceStock from '../Services'\n\nimport { DataContext } from '../App';\n\nconst ActionProvider = ({ createChatBotMessage, setState, children }) => {\n  \n\n  const { state, changeState } = useContext(DataContext);\n\n\n  const handleSearchFinish = async ({state}) => {\n    const botMessage = createChatBotMessage(\n      \"Listo\",\n      {\n        loading: true,\n        terminateLoading: true,\n        withAvatar: true,\n      }\n    );\n    addMessageToState(botMessage)\n    addPriceStockList(await getPriceStock(\"\"))\n\n  };\n\n  const handleInputStock = () => {\n    const botMessage = createChatBotMessage(\n      \"Ingresa la clave de la accion a buscar:\",\n      {\n        loading: true,\n        terminateLoading: true,\n        withAvatar: true,\n      }\n    );\n    addMessageToState(botMessage)\n  };\n\n  const addMessageToState = (botMessage) => {\n    setState((prev) => ({\n      ...prev,\n      messages: [...prev.messages, botMessage],\n    }));\n  };\n\n  const addPriceStockList = ({ data }) => {\n    setState((state) => ({\n      ...state,\n      priceStockList: data,\n    }));\n    localStorage.setItem('data', data);\n  }\n  \n  // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\n  return (\n\n    <div>\n      {React.Children.map(children, (child) => {\n        return React.cloneElement(child, {\n          actions: {\n            handleInputStock,\n            handleSearchFinish,\n          },\n          utils: {\n            state, changeState\n          }\n        });\n      })}\n    </div>\n  );\n};\n\nexport default ActionProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,OAAOC,aAAa,MAAM,aAAa;AAEvC,SAASC,WAAW,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,oBAAoB;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAGvE,MAAM;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGX,UAAU,CAACE,WAAW,CAAC;EAGtD,MAAMU,kBAAkB,GAAG,MAAAA,CAAO;IAACF;EAAK,CAAC,KAAK;IAC5C,MAAMG,UAAU,GAAGP,oBAAoB,CACrC,OAAO,EACP;MACEQ,OAAO,EAAE,IAAI;MACbC,gBAAgB,EAAE,IAAI;MACtBC,UAAU,EAAE;IACd,CACF,CAAC;IACDC,iBAAiB,CAACJ,UAAU,CAAC;IAC7BK,iBAAiB,CAAC,MAAMjB,aAAa,CAAC,EAAE,CAAC,CAAC;EAE5C,CAAC;EAED,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMN,UAAU,GAAGP,oBAAoB,CACrC,yCAAyC,EACzC;MACEQ,OAAO,EAAE,IAAI;MACbC,gBAAgB,EAAE,IAAI;MACtBC,UAAU,EAAE;IACd,CACF,CAAC;IACDC,iBAAiB,CAACJ,UAAU,CAAC;EAC/B,CAAC;EAED,MAAMI,iBAAiB,GAAIJ,UAAU,IAAK;IACxCN,QAAQ,CAAEa,IAAI,KAAM;MAClB,GAAGA,IAAI;MACPC,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAQ,EAAER,UAAU;IACzC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMK,iBAAiB,GAAGA,CAAC;IAAEI;EAAK,CAAC,KAAK;IACtCf,QAAQ,CAAEG,KAAK,KAAM;MACnB,GAAGA,KAAK;MACRa,cAAc,EAAED;IAClB,CAAC,CAAC,CAAC;IACHE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEH,IAAI,CAAC;EACpC,CAAC;;EAED;EACA,oBAEElB,OAAA;IAAAI,QAAA,EACGT,KAAK,CAAC2B,QAAQ,CAACC,GAAG,CAACnB,QAAQ,EAAGoB,KAAK,IAAK;MACvC,oBAAO7B,KAAK,CAAC8B,YAAY,CAACD,KAAK,EAAE;QAC/BE,OAAO,EAAE;UACPX,gBAAgB;UAChBP;QACF,CAAC;QACDmB,KAAK,EAAE;UACLrB,KAAK;UAAEC;QACT;MACF,CAAC,CAAC;IACJ,CAAC;EAAC;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAhEIJ,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AAkEpB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
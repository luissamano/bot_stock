{"ast":null,"code":"var _jsxFileName = \"/Users/luissamano/code/bot_stock/bot_front/src/Componets/Price/index.jsx\";\nimport React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Raw from \"react-bootstrap/Row\";\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Price = props => {\n  return /*#__PURE__*/_jsxDEV(Raw, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xs: 6,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"Light\",\n        text: \"Light\",\n        style: {\n          width: '18rem'\n        },\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [variant, \" Card Title \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, \"Light\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: 6,\n      md: 4,\n      children: \"xs=6 md=4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: 6,\n      md: 4,\n      children: \"xs=6 md=4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Price;\nexport default Price;\nvar _c;\n$RefreshReg$(_c, \"Price\");","map":{"version":3,"names":["React","Col","Raw","Card","jsxDEV","_jsxDEV","Price","props","children","xs","md","bg","text","style","width","className","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","variant","Text","_c","$RefreshReg$"],"sources":["/Users/luissamano/code/bot_stock/bot_front/src/Componets/Price/index.jsx"],"sourcesContent":["import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Raw from \"react-bootstrap/Row\";\nimport Card from 'react-bootstrap/Card';\n\nconst Price = (props) => {\n  return (\n    <Raw>\n      <Col xs={6} md={4}>\n        <Card\n          bg=\"Light\"\n          key=\"Light\"\n          text=\"Light\"\n          style={{ width: '18rem' }}\n          className=\"mb-2\"\n        >\n          <Card.Header>Header</Card.Header>\n          <Card.Body>\n            <Card.Title>{variant} Card Title </Card.Title>\n            <Card.Text>\n              Some quick example text to build on the card title and make up the\n              bulk of the card's content.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col xs={6} md={4}>\n        xs=6 md=4\n      </Col>\n      <Col xs={6} md={4}>\n        xs=6 md=4\n      </Col>\n    </Raw>\n  );\n};\n\nexport default Price;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EACvB,oBACEF,OAAA,CAACH,GAAG;IAAAM,QAAA,gBACFH,OAAA,CAACJ,GAAG;MAACQ,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAF,QAAA,eAChBH,OAAA,CAACF,IAAI;QACHQ,EAAE,EAAC,OAAO;QAEVC,IAAI,EAAC,OAAO;QACZC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAC1BC,SAAS,EAAC,MAAM;QAAAP,QAAA,gBAEhBH,OAAA,CAACF,IAAI,CAACa,MAAM;UAAAR,QAAA,EAAC;QAAM;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACjCf,OAAA,CAACF,IAAI,CAACkB,IAAI;UAAAb,QAAA,gBACRH,OAAA,CAACF,IAAI,CAACmB,KAAK;YAAAd,QAAA,GAAEe,OAAO,EAAC,cAAY;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC9Cf,OAAA,CAACF,IAAI,CAACqB,IAAI;YAAAhB,QAAA,EAAC;UAGX;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAZR,OAAO;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNf,OAAA,CAACJ,GAAG;MAACQ,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAF,QAAA,EAAC;IAEnB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNf,OAAA,CAACJ,GAAG;MAACQ,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAF,QAAA,EAAC;IAEnB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GA7BInB,KAAK;AA+BX,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/luissamano/code/bot_stock/bot_front/src/ActionProvider/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport getPriceStock from '../Services';\nimport { DataContext } from \"../App/index.jsx\";\nimport { actions } from '../App/actions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionProvider = ({\n  createChatBotMessage,\n  children\n}) => {\n  _s();\n  const {\n    state,\n    setState\n  } = useContext(DataContext);\n  const {\n    addPriceStockList\n  } = actions;\n  const handleSearchFinish = async ({\n    state\n  }) => {\n    const botMessage = createChatBotMessage(\"Listo\", {\n      loading: true,\n      terminateLoading: true,\n      withAvatar: true\n    });\n    const data = await getPriceStock(state.idStock);\n    setState({\n      type: addPriceStockList,\n      payload: [botMessage, data]\n    });\n  };\n  const handleInputStock = () => {\n    const botMessage = createChatBotMessage(\"Ingresa la clave de la accion a buscar:\", {\n      loading: true,\n      terminateLoading: true,\n      withAvatar: true\n    });\n    // setState({ type: addMessageToState})\n  };\n\n  // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        actions: {\n          handleInputStock,\n          handleSearchFinish\n        }\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionProvider, \"T94vLopX8vVa32anZheL5X8946E=\");\n_c = ActionProvider;\nexport default ActionProvider;\nvar _c;\n$RefreshReg$(_c, \"ActionProvider\");","map":{"version":3,"names":["React","useContext","getPriceStock","DataContext","actions","jsxDEV","_jsxDEV","ActionProvider","createChatBotMessage","children","_s","state","setState","addPriceStockList","handleSearchFinish","botMessage","loading","terminateLoading","withAvatar","data","idStock","type","payload","handleInputStock","Children","map","child","cloneElement","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luissamano/code/bot_stock/bot_front/src/ActionProvider/index.jsx"],"sourcesContent":["import React, {useContext} from 'react';\nimport getPriceStock from '../Services'\n\nimport { DataContext } from \"../App/index.jsx\";\n\nimport { actions } from '../App/actions.js';\n\nconst ActionProvider = ({ createChatBotMessage, children }) => {\n  const { state, setState} = useContext(DataContext);  \n\n    const { addPriceStockList } = actions;\n\n  const handleSearchFinish = async ({state}) => {\n    const botMessage = createChatBotMessage(\n      \"Listo\",\n      {\n        loading: true,\n        terminateLoading: true,\n        withAvatar: true,\n      }\n    );\n    const data = await getPriceStock(state.idStock);\n    setState({type: addPriceStockList, payload: [botMessage, data] })\n  };\n\n  const handleInputStock = () => {\n    const botMessage = createChatBotMessage(\n      \"Ingresa la clave de la accion a buscar:\",\n      {\n        loading: true,\n        terminateLoading: true,\n        withAvatar: true,\n      }\n    );\n    // setState({ type: addMessageToState})\n  };\n  \n  // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\n  return (\n    <div>\n      {React.Children.map(children, (child) => {\n        return React.cloneElement(child, {\n          actions: {\n            handleInputStock,\n            handleSearchFinish,\n          },\n        });\n      })}\n    </div>\n  );\n};\n\nexport default ActionProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,OAAOC,aAAa,MAAM,aAAa;AAEvC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,oBAAoB;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGX,UAAU,CAACE,WAAW,CAAC;EAEhD,MAAM;IAAEU;EAAkB,CAAC,GAAGT,OAAO;EAEvC,MAAMU,kBAAkB,GAAG,MAAAA,CAAO;IAACH;EAAK,CAAC,KAAK;IAC5C,MAAMI,UAAU,GAAGP,oBAAoB,CACrC,OAAO,EACP;MACEQ,OAAO,EAAE,IAAI;MACbC,gBAAgB,EAAE,IAAI;MACtBC,UAAU,EAAE;IACd,CACF,CAAC;IACD,MAAMC,IAAI,GAAG,MAAMjB,aAAa,CAACS,KAAK,CAACS,OAAO,CAAC;IAC/CR,QAAQ,CAAC;MAACS,IAAI,EAAER,iBAAiB;MAAES,OAAO,EAAE,CAACP,UAAU,EAAEI,IAAI;IAAE,CAAC,CAAC;EACnE,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMR,UAAU,GAAGP,oBAAoB,CACrC,yCAAyC,EACzC;MACEQ,OAAO,EAAE,IAAI;MACbC,gBAAgB,EAAE,IAAI;MACtBC,UAAU,EAAE;IACd,CACF,CAAC;IACD;EACF,CAAC;;EAED;EACA,oBACEZ,OAAA;IAAAG,QAAA,EACGT,KAAK,CAACwB,QAAQ,CAACC,GAAG,CAAChB,QAAQ,EAAGiB,KAAK,IAAK;MACvC,oBAAO1B,KAAK,CAAC2B,YAAY,CAACD,KAAK,EAAE;QAC/BtB,OAAO,EAAE;UACPmB,gBAAgB;UAChBT;QACF;MACF,CAAC,CAAC;IACJ,CAAC;EAAC;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA3CIH,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AA6CpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
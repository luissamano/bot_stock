{"ast":null,"code":"var _jsxFileName = \"/Users/luissamano/code/bot_stock/bot_front/src/Componets/Chatbot/index.jsx\",\n  _s = $RefreshSig$();\n// ChatbotComponent.js\nimport React, { useContext } from 'react';\nimport { StateContext } from './StateContext';\nimport { Chatbot } from 'react-chatbot-kit';\nimport config from './config';\nimport MessageParser from './MessageParser';\nimport ActionProvider from './ActionProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotComponent = () => {\n  _s();\n  const {\n    dispatch\n  } = useContext(StateContext);\n  const actionProvider = new ActionProvider(message => {\n    dispatch({\n      type: 'ADD_MESSAGE',\n      payload: message\n    });\n  }, dispatch);\n  return /*#__PURE__*/_jsxDEV(Chatbot, {\n    config: config,\n    messageParser: new MessageParser(actionProvider),\n    actionProvider: actionProvider\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotComponent, \"y0TpHjmA0G5gpKtNPtwKueTIMNE=\");\n_c = ChatbotComponent;\nexport default ChatbotComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatbotComponent\");","map":{"version":3,"names":["React","useContext","StateContext","Chatbot","config","MessageParser","ActionProvider","jsxDEV","_jsxDEV","ChatbotComponent","_s","dispatch","actionProvider","message","type","payload","messageParser","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luissamano/code/bot_stock/bot_front/src/Componets/Chatbot/index.jsx"],"sourcesContent":["// ChatbotComponent.js\nimport React, { useContext } from 'react';\nimport { StateContext } from './StateContext';\nimport { Chatbot } from 'react-chatbot-kit';\nimport config from './config';\nimport MessageParser from './MessageParser';\nimport ActionProvider from './ActionProvider';\n\nconst ChatbotComponent = () => {\n  const { dispatch } = useContext(StateContext);\n\n  const actionProvider = new ActionProvider((message) => {\n    dispatch({\n      type: 'ADD_MESSAGE',\n      payload: message,\n    });\n  }, dispatch);\n\n  return (\n    <Chatbot \n      config={config} \n      messageParser={new MessageParser(actionProvider)} \n      actionProvider={actionProvider} \n    />\n  );\n};\n\nexport default ChatbotComponent;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAS,CAAC,GAAGV,UAAU,CAACC,YAAY,CAAC;EAE7C,MAAMU,cAAc,GAAG,IAAIN,cAAc,CAAEO,OAAO,IAAK;IACrDF,QAAQ,CAAC;MACPG,IAAI,EAAE,aAAa;MACnBC,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,EAAEF,QAAQ,CAAC;EAEZ,oBACEH,OAAA,CAACL,OAAO;IACNC,MAAM,EAAEA,MAAO;IACfY,aAAa,EAAE,IAAIX,aAAa,CAACO,cAAc,CAAE;IACjDA,cAAc,EAAEA;EAAe;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEN,CAAC;AAACV,EAAA,CAjBID,gBAAgB;AAAAY,EAAA,GAAhBZ,gBAAgB;AAmBtB,eAAeA,gBAAgB;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
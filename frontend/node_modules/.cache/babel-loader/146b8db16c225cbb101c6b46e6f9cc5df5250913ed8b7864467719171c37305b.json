{"ast":null,"code":"var _jsxFileName = \"/Users/luissamano/code/bot_stock/bot_front/src/MessageParser/index.jsx\";\n// in MessageParser.jsx\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageParser = ({\n  children,\n  actions\n}) => {\n  const parse = message => {\n    if (message.includes(\"ayuda\") || message.includes(\"puedes hacer\") || message.includes(\"talk\") || message.includes(\"speak\") || message.includes(\"real person\") || message.includes(\"person\") || message.includes(\"contact\")) {\n      actions.handleDefault();\n    }\n    if (message.includes(\"hello\") || message.includes(\"hi\") || message.includes(\"hola\")) {\n      actions.handleHello();\n    } else {\n      actions.handleSearchStockId(message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        parse: parse,\n        actions\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageParser;\nexport default MessageParser;\nvar _c;\n$RefreshReg$(_c, \"MessageParser\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageParser","children","actions","parse","message","includes","handleDefault","handleHello","handleSearchStockId","Children","map","child","cloneElement","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luissamano/code/bot_stock/bot_front/src/MessageParser/index.jsx"],"sourcesContent":["// in MessageParser.jsx\nimport React from \"react\";\n\nconst MessageParser = ({ children, actions }) => {\n  const parse = (message) => {\n    if (\n      message.includes(\"ayuda\") ||\n      message.includes(\"puedes hacer\") ||\n      message.includes(\"talk\") ||\n      message.includes(\"speak\") ||\n      message.includes(\"real person\") ||\n      message.includes(\"person\") ||\n      message.includes(\"contact\")\n    ) {\n      actions.handleDefault();\n    }\n    if(\n      message.includes(\"hello\") ||\n      message.includes(\"hi\") ||\n      message.includes(\"hola\")\n    ) {\n      actions.handleHello();\n    } else {\n      actions.handleSearchStockId(message);\n    }\n  };\n\n  return (\n    <div>\n      {React.Children.map(children, (child) => {\n        return React.cloneElement(child, {\n          parse: parse,\n          actions,\n        });\n      })}\n    </div>\n  );\n};\n\nexport default MessageParser;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAC/C,MAAMC,KAAK,GAAIC,OAAO,IAAK;IACzB,IACEA,OAAO,CAACC,QAAQ,CAAC,OAAO,CAAC,IACzBD,OAAO,CAACC,QAAQ,CAAC,cAAc,CAAC,IAChCD,OAAO,CAACC,QAAQ,CAAC,MAAM,CAAC,IACxBD,OAAO,CAACC,QAAQ,CAAC,OAAO,CAAC,IACzBD,OAAO,CAACC,QAAQ,CAAC,aAAa,CAAC,IAC/BD,OAAO,CAACC,QAAQ,CAAC,QAAQ,CAAC,IAC1BD,OAAO,CAACC,QAAQ,CAAC,SAAS,CAAC,EAC3B;MACAH,OAAO,CAACI,aAAa,CAAC,CAAC;IACzB;IACA,IACEF,OAAO,CAACC,QAAQ,CAAC,OAAO,CAAC,IACzBD,OAAO,CAACC,QAAQ,CAAC,IAAI,CAAC,IACtBD,OAAO,CAACC,QAAQ,CAAC,MAAM,CAAC,EACxB;MACAH,OAAO,CAACK,WAAW,CAAC,CAAC;IACvB,CAAC,MAAM;MACLL,OAAO,CAACM,mBAAmB,CAACJ,OAAO,CAAC;IACtC;EACF,CAAC;EAED,oBACEL,OAAA;IAAAE,QAAA,EACGJ,KAAK,CAACY,QAAQ,CAACC,GAAG,CAACT,QAAQ,EAAGU,KAAK,IAAK;MACvC,oBAAOd,KAAK,CAACe,YAAY,CAACD,KAAK,EAAE;QAC/BR,KAAK,EAAEA,KAAK;QACZD;MACF,CAAC,CAAC;IACJ,CAAC;EAAC;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAlCIjB,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
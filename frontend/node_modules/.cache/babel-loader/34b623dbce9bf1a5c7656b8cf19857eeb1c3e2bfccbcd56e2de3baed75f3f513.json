{"ast":null,"code":"var _jsxFileName = \"/Users/luissamano/code/bot_stock/bot_front/src/ActionProvider/index.jsx\";\nimport React, { useContext } from 'react';\nimport getPriceStock from '../Services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionProvider = ({\n  createChatBotMessage,\n  children,\n  setState\n}) => {\n  const handleHello = () => {\n    const botMessage = createChatBotMessage('Hello. Nice to meet you.');\n    setState(prev => ({\n      ...prev,\n      messages: [...prev.messages, botMessage]\n    }));\n  };\n  const handleDog = () => {\n    const botMessage = createChatBotMessage(\"Here's a nice dog picture for you!\", {\n      widget: 'dogPicture'\n    });\n    setState(prev => ({\n      ...prev,\n      messages: [...prev.messages, botMessage]\n    }));\n  };\n  const handleSearchFinish = async (value, props) => {\n    const botMessage = createChatBotMessage(\"Listo\", {\n      loading: true,\n      terminateLoading: true,\n      withAvatar: true\n    });\n    setState(state => ({\n      ...state,\n      idStock: value\n    }));\n  };\n  const addMessageToState = message => {\n    this.setState(state => ({\n      ...state,\n      messages: [...state.messages, message]\n    }));\n  };\n\n  // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        actions: {\n          handleHello,\n          handleDog,\n          handleSearchFinish\n        }\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_c = ActionProvider;\nexport default ActionProvider;\nvar _c;\n$RefreshReg$(_c, \"ActionProvider\");","map":{"version":3,"names":["React","useContext","getPriceStock","jsxDEV","_jsxDEV","ActionProvider","createChatBotMessage","children","setState","handleHello","botMessage","prev","messages","handleDog","widget","handleSearchFinish","value","props","loading","terminateLoading","withAvatar","state","idStock","addMessageToState","message","Children","map","child","cloneElement","actions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luissamano/code/bot_stock/bot_front/src/ActionProvider/index.jsx"],"sourcesContent":["import React, {useContext} from 'react';\nimport getPriceStock from '../Services'\n\nconst ActionProvider = ({ createChatBotMessage, children, setState }) => {\n\n  const handleHello = () => {\n    const botMessage = createChatBotMessage('Hello. Nice to meet you.');\n\n    setState((prev) => ({\n      ...prev,\n      messages: [...prev.messages, botMessage],\n    }));\n  };\n\n  const handleDog = () => {\n    const botMessage = createChatBotMessage(\n      \"Here's a nice dog picture for you!\",\n      {\n        widget: 'dogPicture',\n      }\n    );\n\n    setState((prev) => ({\n      ...prev,\n      messages: [...prev.messages, botMessage],\n    }));\n  };\n\n  const handleSearchFinish = async (value, props) => {\n    const botMessage = createChatBotMessage(\n      \"Listo\",\n      {\n        loading: true,\n        terminateLoading: true,\n        withAvatar: true,\n      }\n    );\n    setState((state) => ({\n      ...state,\n      idStock: value,\n    }));\n\n  }\n\n  const addMessageToState = (message) => {\n    this.setState((state) => ({\n      ...state,\n      messages: [...state.messages, message],\n    }));\n  };\n  \n  // Put the handleHello and handleDog function in the actions object to pass to the MessageParser\n  return (\n    <div>\n      {React.Children.map(children, (child) => {\n        return React.cloneElement(child, {\n          actions: {\n            handleHello,\n            handleDog,\n            handleSearchFinish,\n          },\n        });\n      })}\n    </div>\n  );\n};\n\nexport default ActionProvider;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,OAAOC,aAAa,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,oBAAoB;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAEvE,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,UAAU,GAAGJ,oBAAoB,CAAC,0BAA0B,CAAC;IAEnEE,QAAQ,CAAEG,IAAI,KAAM;MAClB,GAAGA,IAAI;MACPC,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAQ,EAAEF,UAAU;IACzC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMH,UAAU,GAAGJ,oBAAoB,CACrC,oCAAoC,EACpC;MACEQ,MAAM,EAAE;IACV,CACF,CAAC;IAEDN,QAAQ,CAAEG,IAAI,KAAM;MAClB,GAAGA,IAAI;MACPC,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAQ,EAAEF,UAAU;IACzC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMK,kBAAkB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,KAAK,KAAK;IACjD,MAAMP,UAAU,GAAGJ,oBAAoB,CACrC,OAAO,EACP;MACEY,OAAO,EAAE,IAAI;MACbC,gBAAgB,EAAE,IAAI;MACtBC,UAAU,EAAE;IACd,CACF,CAAC;IACDZ,QAAQ,CAAEa,KAAK,KAAM;MACnB,GAAGA,KAAK;MACRC,OAAO,EAAEN;IACX,CAAC,CAAC,CAAC;EAEL,CAAC;EAED,MAAMO,iBAAiB,GAAIC,OAAO,IAAK;IACrC,IAAI,CAAChB,QAAQ,CAAEa,KAAK,KAAM;MACxB,GAAGA,KAAK;MACRT,QAAQ,EAAE,CAAC,GAAGS,KAAK,CAACT,QAAQ,EAAEY,OAAO;IACvC,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,oBACEpB,OAAA;IAAAG,QAAA,EACGP,KAAK,CAACyB,QAAQ,CAACC,GAAG,CAACnB,QAAQ,EAAGoB,KAAK,IAAK;MACvC,oBAAO3B,KAAK,CAAC4B,YAAY,CAACD,KAAK,EAAE;QAC/BE,OAAO,EAAE;UACPpB,WAAW;UACXI,SAAS;UACTE;QACF;MACF,CAAC,CAAC;IACJ,CAAC;EAAC;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA9DI7B,cAAc;AAgEpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}